---
interface NavItem {
  name: string;
  href: string;
}

const navItems: NavItem[] = [
  { name: 'Accueil', href: '#' },
  { name: 'À propos', href: '#about' },
  { name: 'Compétences', href: '#skills' },
  { name: 'Projets', href: '#projects' },
  { name: 'Contact', href: '#contact' }
];
---

<nav class="navbar fixed top-0 left-0 right-0 z-50 bg-transparent backdrop-blur-md py-4 transition-all duration-300">
  <div class="max-w-[90rem] mx-auto px-6">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="#" class="nav-logo text-2xl font-bold text-white hover:text-primary-300 transition-colors duration-200">
          Sarah<span class="text-primary-400">.</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="nav-container flex items-center space-x-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full px-6 py-2 transition-all duration-300">
          {navItems.map((item) => (
            <a
              href={item.href}
              class="nav-link text-white/90 hover:text-white hover:bg-white/20 px-4 py-2 rounded-full font-medium transition-all duration-200 border border-transparent hover:border-white/30"
            >
              {item.name}
            </a>
          ))}
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="mobile-menu-button nav-mobile-btn text-white/90 hover:text-white hover:bg-white/20 focus:outline-none focus:text-white border border-white/20 rounded-full p-2 transition-all duration-200"
          aria-label="Menu"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div class="mobile-menu hidden md:hidden">
      <div class="nav-mobile-menu px-4 pt-4 pb-4 space-y-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-2xl mx-4 mt-2 transition-all duration-300">
        {navItems.map((item) => (
          <a
            href={item.href}
            class="nav-mobile-link text-white/90 hover:text-white hover:bg-white/20 block px-4 py-3 rounded-xl text-base font-medium transition-all duration-200 border border-transparent hover:border-white/30"
          >
            {item.name}
          </a>
        ))}
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle and navbar scroll effect
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.querySelector('.mobile-menu-button');
    const menu = document.querySelector('.mobile-menu');
    const navbar = document.querySelector('.navbar');
    const navLogo = document.querySelector('.nav-logo');
    const navContainer = document.querySelector('.nav-container');
    const navLinks = document.querySelectorAll('.nav-link');
    const navMobileBtn = document.querySelector('.nav-mobile-btn');
    const navMobileMenu = document.querySelector('.nav-mobile-menu');
    const navMobileLinks = document.querySelectorAll('.nav-mobile-link');

    // Mobile menu toggle
    if (button && menu) {
      button.addEventListener('click', () => {
        menu.classList.toggle('hidden');
      });
    }

    // Close mobile menu when clicking on a link
    const mobileLinks = menu?.querySelectorAll('a');
    mobileLinks?.forEach((link) => {
      link.addEventListener('click', () => {
        menu.classList.add('hidden');
      });
    });

    // Navbar scroll effect
    let lastScrollTop = 0;
    const handleScroll = () => {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      const isScrolled = scrollTop > 50;

      if (isScrolled) {
        // Scrolled state - dark theme for visibility on white backgrounds
        navbar?.classList.add('bg-white/95', 'shadow-lg', 'backdrop-blur-xl');
        navbar?.classList.remove('bg-transparent');

        navLogo?.classList.add('text-gray-900', 'hover:text-primary-600');
        navLogo?.classList.remove('text-white', 'hover:text-primary-300');

        navContainer?.classList.add('bg-gray-100/50', 'border-gray-200/50');
        navContainer?.classList.remove('bg-white/10', 'border-white/20');

        navLinks?.forEach(link => {
          link.classList.add('text-gray-700', 'hover:text-gray-900', 'hover:bg-gray-200/50', 'hover:border-gray-300/50');
          link.classList.remove('text-white/90', 'hover:text-white', 'hover:bg-white/20', 'hover:border-white/30');
        });

        navMobileBtn?.classList.add('text-gray-700', 'hover:text-gray-900', 'hover:bg-gray-200/50', 'border-gray-200/50');
        navMobileBtn?.classList.remove('text-white/90', 'hover:text-white', 'hover:bg-white/20', 'border-white/20');

        navMobileMenu?.classList.add('bg-white/95', 'border-gray-200/50');
        navMobileMenu?.classList.remove('bg-white/10', 'border-white/20');

        navMobileLinks?.forEach(link => {
          link.classList.add('text-gray-700', 'hover:text-gray-900', 'hover:bg-gray-200/50', 'hover:border-gray-300/50');
          link.classList.remove('text-white/90', 'hover:text-white', 'hover:bg-white/20', 'hover:border-white/30');
        });
      } else {
        // Top state - transparent theme for Hero section
        navbar?.classList.remove('bg-white/95', 'shadow-lg', 'backdrop-blur-xl');
        navbar?.classList.add('bg-transparent');

        navLogo?.classList.remove('text-gray-900', 'hover:text-primary-600');
        navLogo?.classList.add('text-white', 'hover:text-primary-300');

        navContainer?.classList.remove('bg-gray-100/50', 'border-gray-200/50');
        navContainer?.classList.add('bg-white/10', 'border-white/20');

        navLinks?.forEach(link => {
          link.classList.remove('text-gray-700', 'hover:text-gray-900', 'hover:bg-gray-200/50', 'hover:border-gray-300/50');
          link.classList.add('text-white/90', 'hover:text-white', 'hover:bg-white/20', 'hover:border-white/30');
        });

        navMobileBtn?.classList.remove('text-gray-700', 'hover:text-gray-900', 'hover:bg-gray-200/50', 'border-gray-200/50');
        navMobileBtn?.classList.add('text-white/90', 'hover:text-white', 'hover:bg-white/20', 'border-white/20');

        navMobileMenu?.classList.remove('bg-white/95', 'border-gray-200/50');
        navMobileMenu?.classList.add('bg-white/10', 'border-white/20');

        navMobileLinks?.forEach(link => {
          link.classList.remove('text-gray-700', 'hover:text-gray-900', 'hover:bg-gray-200/50', 'hover:border-gray-300/50');
          link.classList.add('text-white/90', 'hover:text-white', 'hover:bg-white/20', 'hover:border-white/30');
        });
      }

      lastScrollTop = scrollTop;
    };

    // Listen for scroll events
    window.addEventListener('scroll', handleScroll, { passive: true });

    // Initial call to set correct state
    handleScroll();

    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href') as string);
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  });
</script>
